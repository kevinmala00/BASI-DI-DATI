							
							ISTRUZIONI MICROSOFT SQL 2019


notazione del linguaggio:
-	elementi TERMINALI
-	elementi <non terminali> ovvero le variabili
-	elementi [opzionali]
- 	elenchi di elementi vanno posto tra <...>
-	elenco di termini di cui se ne deve scegliere solo uno termine1 | termine2 | termine3


si fa riferimento al manuale online "transact sql 2019"

TIPI DI DATO
		i tipi di dati con prefisso var allocano dinamicamente la memeoria
				
		- dati numerici esatti 	
									bigint			8 byte
									int 			4 byte
									smallint		2 byte
									tinyint			1 byte
									money 			variabile		utile per le valute
									
		- dati numeri approssimati
										float
		- stringhe di testo unicode
										nchar(max)
										nvarchar(max)
										ntext(max)
		- stringhe binarie
								binary(max)
								varbinary(max)
		- stringhe di caratteri 
									char(max)
									varchar(max)
									text(max)
		- date e time
						date 
						datetime
						time
ISTRUZIONI
			- CREATEDATABASE 
					CREATE DATABASE nome_database
					(
					<elementi database>
					);
			 
			 
			-CREATETABLE 
					CREATE TABLE 
					{nome_tabella
						( 
						<nome colonna1> <tipo di dato> [vincoli di colonna],
							...
						[vincoli di tabella]
						);
					
							VINCOLI DI COLONNA:
									Not Null
									Unique
									primary key
									references <tabella> [lista colonne]
									check (condizione)
									per definire un'alternative key bisogna mettere come vincoli Unique Not Null
							
							VINCOLI DI TABELLA:
									PRIMARY KEY(<lista colonne>)
									FOREIGN KEY (<lista colonne>) REFERENCES <tabella> [lista colonne]
									CHECK (<condizione>)
									CONSTRAINT nome_vincolo <vincolo>			permette di dare un nome la vincolo
									
									di default ogni azione che provoca una violazione dei vincoli di integrità non viene eseguita, 
									posso settare però della azioni in risposta a queste situazioni. 
									Nei casi di azioni specificate da ON sulla tabella riferita vengono effettuate azioni (le 4 opzioni finali)
									sulla tabella dipendente
									
									FOREIGN KEY (<lista colonne>) 
									REFERENCES <tabella> [lista colonne]
									ON <DELETE | UPDATE>
									<CASCADE | SET NULL | SET DEFAULT | NO ACTION>

				
			-CREATE TYPE 	permette di inserire un nuovo tipo di dato
					CREATE TYPE nome_type
					(
					FROM tipo_base <vincoli di integrità>
					)
					
			-DROP DATABASE permette di eliminare il db
					DROP DATABASE nome_database
				
						serve eseguire il comando sul db master

			
			-DROP TABLE permette di eliminare una tabella
					DROP TABLE nome_tabella
					
			-TRUNCATE	elimina le tuple inserite nella tabella, preservando però la tabella
				truncate name_table 

				
			-ALTER TABLE
					alter table <nome_tabella> <tipo_modifica>
					
							<tipo_modifica>:
									ADD [COLUMN] <nome_colonna><nome_type><vincoli di colonna>
									DROP [COLUMN] <nome_colonna> RESTRICT | CASCADE
											con cascade impone l'eliminazione
									ADD <vincolo di tabella>
									DROP <nome_vincolo> RESTRICT | CASCADE
									ALTER [COLUMN] <nome_colonna> SET DEFAULT <valore>
									ALTER [COLUMN] <nome_colonna> DROP DEFAULT
									
			-USE
					USE name_database;
					
					permette di spostarsi nel name_database
					
			-GO
				GO 
				
				permette di eseguire il comando, le istruzioni successive saranno sicure che iil comando precedente è stato eseguito

INTERROGAZIONE
			--	con questi due trattini si cindicano i commenti, fino alla fine della linea
			
			-INSERT
				insert into name_table (attrbiute1, ...) 
				values ("val1",...)
			
			-SELECT
				select name_colum1,...
				from name_table1,...
				where <predicati>
				order by name_colum1,... <mode>
				
				NB: con * si considerano tutte le colonne (attributi)

						PREDICATI SEMPLICI 
							-operatori relazionali -> <attr> <op_rel> <cost>
									<op_rel> -> {=,<>,<,>,<=,>=}
							-operatori di range -> <attr> BETWEEN <cost1> AND <cost2>
							-operatori di set -> <attr> IN (<cost1>,...,<costN>)
							-operatori di confronto tra stringhe -> <attr> LIKE <stringa>
									<stringa> identificata tra '..'
										pattern matching
											'%string'	% si espande a stringa di caratteri
											'_string'	_ si espande a un singolo carattere
											'[set]'		stringa che contiene il set di caratteri
											'[^set]'	stringa che non contiene il set di caratteri
							-operatori quantificati -> <attr> <op_rel> [ANY|ALL] (<sub-query>)
									ANY: uno di 
									ALL: tutti
							-operatori di confronto con valori NULL -> <attr> IS [NOT] NOT
							
						MODE
							-DESC -> decrescente
							-ASC -> crescente

	SET NOCOUNT ON/OFF 		disabilita/ abilita
	SET DATEFROMAT	dmy 	setta il formato della data come giorno/mese/anno
	
			
			
DATA MANIPULATION LANGUAGE 
	
	DEFAULT	
		permette di settare il valore di default rispettivo di una colonna
		
		CREATE TABLE nome_tabella (
		nome_colonna data_type DEFAULT valore_di_default,
		...
		)
		
		ALTER TABLE nome_tabella
		ADD CONSTRAINT nome_constraint DEFAULT valore_di_default FOR nome_colonna
		
		
	INSERT
		permette di inserire una tupòe nella tabella
		
		INSERT INTO nome_tabella (attributes list) VALUES (values list);
		
		NB: le liste escluse vengono riempite con i valori di default se questo non genera errore
		
	
	DELETE
		permette di eliminare i valori riferiti alla tabelle nome_tabella che corrispondono alla condizione della where (se non espresso vengono eliminate tutte le tuple della tabella)
		
		DELETE FROM nome_tabella
		[WHERE comndizione]
	
	
	UPDATE
		permette di modificare valori riferiti a colonne indicate
		
		UPDATE nome_tabella 
		SET nome_colonna = valore_attributo
		[WHERE  condizione]
	

	DATI DERIVATI/COLONNE CALCOLATE
		è possibile definire le colonne come operazioni su dati già esistentei
		
		CREATE TABLE nome_tabella
		(
		nome_colonna AS computed_column_expression,
		...
		)
	

GERARCHIE 
	il fatto che una primary key di una tabella fa riferimento ad un primary key di un'altra tabella comporta la formazione di una gerarchia
	


ALTRO 
	getdate() 	
		fornisce la data attuale
		
	DATEDIFF(mode, startdate, enddate)		
				calcola la differenza tra enddate e startdate in mode che può essere year, month, day, minute, etc...
	
SUBQUERY
	Solitamente comportano dei confronti con un insieme di valori per quaesto bisogna utilizzare IN (= ANY), NOT IN (<> ALL)
	